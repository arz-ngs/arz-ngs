<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:jsf="http://xmlns.jcp.org/jsf"
	xmlns:p="http://xmlns.jcp.org/jsf/passthrough"
	xmlns:ui="http://java.sun.com/jsf/facelets">
<h:head>
	<meta http-equiv="Content-Type"
		content="application/xhtml+xml; charset=UTF-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=edge"></meta>
	<title>Detailansicht Service Instanz</title>
</h:head>
<body jsf:id="body">
	<ui:composition template="/templates/commonLayout.xhtml">
		<ui:define name="mainContent">
			<div id="mid-col" class="col-md-8 secondcol">
				<div class="row">
					<div class="col-md-10 menutop1">
						<h:commandButton value="enterFormSubmit" class="btn btn-primary"
							id="buttonFormSubmit" action="#{serviceinstance.formSubmit()}">
						</h:commandButton>
						<h:commandButton value="Start"
							class="btn btn-primary #{serviceInstanceDetail.commandButtonCollection.startCSSClass}"
							id="buttonStart"
							disabled="#{serviceInstanceDetail.commandButtonCollection.startDisabled}"
							action="#{actionController.startSingle(serviceInstanceDetail.service, serviceInstanceDetail.environment, serviceInstanceDetail.host, serviceInstanceDetail.instance)}">
						</h:commandButton>
						<h:commandButton value="Stop"
							class="btn btn-primary #{serviceInstanceDetail.commandButtonCollection.stopCSSClass}"
							id="buttonStop"
							disabled="#{serviceInstanceDetail.commandButtonCollection.stopDisabled}"
							action="#{actionController.stopSingle(serviceInstanceDetail.service, serviceInstanceDetail.environment, serviceInstanceDetail.host, serviceInstanceDetail.instance)}">
						</h:commandButton>
						<h:commandButton value="Restart"
							class="btn btn-primary #{serviceInstanceDetail.commandButtonCollection.restartCSSClass}"
							id="buttonRestart"
							disabled="#{serviceInstanceDetail.commandButtonCollection.restartDisabled}"
							action="#{actionController.restartSingle(serviceInstanceDetail.service, serviceInstanceDetail.environment, serviceInstanceDetail.host, serviceInstanceDetail.instance)}">
						</h:commandButton>
						<h:commandButton value="Status"
							class="btn btn-primary #{serviceInstanceDetail.commandButtonCollection.statusCSSClass}"
							id="buttonStatus"
							disabled="#{serviceInstanceDetail.commandButtonCollection.statusDisabled}"
							action="#{actionController.statusSingle(serviceInstanceDetail.service, serviceInstanceDetail.environment, serviceInstanceDetail.host, serviceInstanceDetail.instance)}">
						</h:commandButton>
					</div>
				</div>
				<div class="edit-new_mid">
					<div>
						<!-- general input/settings -->
						<div class="input-group inner_input_seperator">
							<span class="input-group-addon input_descriptor"
								id="serviceInstanceName">Service Instanz</span>
							<h:inputText value="#{serviceInstanceDetail.instance}"
								type="text" class="form-control"
								p:placeholder="Instanz eines Services"
								aria-describedby="serviceInstanceName"
								readonly="#{facesContext.renderResponse}" />
						</div>
						<div class="input-group inner_input_seperator">
							<span class="input-group-addon input_descriptor" id="serviceName">Service</span>
							<h:inputText value="#{serviceInstanceDetail.service}"
								readonly="#{facesContext.renderResponse}" type="text"
								class="form-control"
								p:placeholder="Service (von einem Service werden mehrere (Service) Instanzen erzeugt)"
								aria-describedby="serviceName"></h:inputText>
						</div>
						<div class="input-group inner_input_seperator">
							<span class="input-group-addon input_descriptor"
								id="environmentName">EnvId</span>
							<h:inputText value="#{serviceInstanceDetail.environment}"
								readonly="#{facesContext.renderResponse}" type="text"
								class="form-control" p:placeholder="EnvId oder das Environment"
								aria-describedby="environmentName"></h:inputText>
						</div>
						<div class="input-group inner_input_seperator">
							<span class="input-group-addon input_descriptor" id="hostName">Host</span>
							<h:inputText value="#{serviceInstanceDetail.host}" type="text"
								readonly="#{facesContext.renderResponse}" class="form-control"
								p:placeholder="Host" aria-describedby="hostName"></h:inputText>
						</div>
						<div class="input-group inner_input_seperator">
							<span class="input-group-addon input_descriptor" id="status">Status</span>
							<h:inputText value="#{serviceInstanceDetail.status}" type="text"
								readonly="#{facesContext.renderResponse}" class="form-control"
								p:placeholder="Das Statusfeld sollte nie leer sein!"
								aria-describedby="status"></h:inputText>
						</div>
						<div class="input-group inner_input_seperator">
							<span class="input-group-addon input_descriptor" id="job">JobId</span>
							<h:inputText value="#{serviceInstanceDetail.jobId}" type="text"
								readonly="#{facesContext.renderResponse}" class="form-control"
								p:placeholder="Derzeit ist kein Job an dieser Instanz geplant."
								aria-describedby="job"></h:inputText>
						</div>
					</div>
					<div class="outer_input_seperator">
						<!-- Script relational settings/input -->
						<h2>Script</h2>
						<div class="input-group inner_input_seperator">
							<span class="input-group-addon input_descriptor" id="scriptName">Script
								Name</span>
							<h:inputText value="#{serviceInstanceDetail.scriptName}"
								type="text" class="form-control"
								readonly="#{facesContext.renderResponse}"
								p:placeholder="Name des Scripts (Feld für Single-Edit von Scriptpfaden leer lassen)"
								aria-describedby="scriptName"></h:inputText>
						</div>
						<div class="input-group inner_input_seperator">
							<span class="input-group-addon input_descriptor" id="startPath">Start
								Pfad</span>
							<h:inputText value="#{serviceInstanceDetail.pathStart}"
								type="text" class="form-control"
								readonly="#{facesContext.renderResponse}"
								p:placeholder="Pfad zum Script, welches den Start eines Services ausführt (inkl. Parameter wie start, etc.)"
								aria-describedby="startPath"></h:inputText>
						</div>
						<div class="input-group inner_input_seperator">
							<span class="input-group-addon input_descriptor" id="stopPath">Stopp
								Pfad</span>
							<h:inputText value="#{serviceInstanceDetail.pathStop}"
								type="text" class="form-control"
								readonly="#{facesContext.renderResponse}"
								p:placeholder="Pfad zum Script, welches den Stopp eines Services ausführt (inkl. Parameter wie stop, etc.)"
								aria-describedby="stopPath"></h:inputText>
						</div>
						<div class="input-group inner_input_seperator">
							<span class="input-group-addon input_descriptor" id="restartPath">Restart
								Pfad</span>
							<h:inputText value="#{serviceInstanceDetail.pathRestart}"
								type="text" class="form-control"
								readonly="#{facesContext.renderResponse}"
								p:placeholder="Pfad zum Script, welches den Restart eines Services ausführt (inkl. Parameter wie restart, etc.)"
								aria-describedby="restartPath"></h:inputText>
						</div>
						<div class="input-group inner_input_seperator">
							<span class="input-group-addon input_descriptor" id="statusPath">Status
								Pfad</span>
							<h:inputText value="#{serviceInstanceDetail.pathStatus}"
								type="text" class="form-control"
								readonly="#{facesContext.renderResponse}"
								p:placeholder="Pfad zum Script, welches den Status eines Services zurück gibt (inkl. Parameter wie status, etc.)"
								aria-describedby="statusPath"></h:inputText>
						</div>
					</div>
					<div class="outer_input_seperator">
						<!-- space for more information -->
						<h2>Zusätzliche Informationen</h2>
						<div class="form-group">
							<h:inputTextarea class="form-control" rows="5"
								id="additionalInformation"
								value="#{serviceInstanceDetail.information}"
								readonly="#{facesContext.renderResponse}"
								p:placeholder="Zusätzliche Informationen zur Intanz eines Services..."></h:inputTextarea>
						</div>
					</div>
					<div>
						<!-- edit button -->
						<h:outputLink rendered="#{user.renderAdminOnlyElements}"
							value="editServiceInstance.xhtml"
							class="btn btn-primary float_right" id="submit_input">
							<f:param name="instance"
								value="#{serviceInstanceDetail.instance}" />
							<f:param name="service" value="#{serviceInstanceDetail.service}" />
							<f:param name="env" value="#{serviceInstanceDetail.environment}" />
							<f:param name="host" value="#{serviceInstanceDetail.host}" />
							<h:outputText value="Editieren" />
						</h:outputLink>
					</div>
				</div>
			</div>
		</ui:define>

		<ui:define name="settingsCol">
			<div id="settings_col" class="col-md-2">
				<!-- bottom settings: new instance, pagination, elements per page -->
				<h:commandLink type="button"
					rendered="#{user.renderAdminOnlyElements}"
					styleClass="btn btn-primary btn-lg float_right"
					id="delete_ServiceInstanceButton"
					action="#{deleteServiceInstance.deleteServiceInstance(serviceInstanceDetail.instance, serviceInstanceDetail.service, serviceInstanceDetail.environment, serviceInstanceDetail.host)}">
					<span class="glyphicon glyphicon-minus" aria-hidden="true"></span>
				</h:commandLink>
			</div>
		</ui:define>

		<ui:define name="errorDisplayables">
			<h:outputScript
				rendered="#{serviceInstanceDetail.errorCollection.showPopup}">
    	 BootstrapDialog.show({
            title: '#{serviceInstanceDetail.errorCollection.headerInformation}',
            message: '#{serviceInstanceDetail.errorCollection.messages}',
            closable: false,
            buttons: [{
            	label: 'Schließen',
            	action: function(dialogRef) {
            		dialogRef.close();
            		history.go(-1);
            	}
            }]
        });
		</h:outputScript>
			<h:outputScript
				rendered="#{actionController.errorCollection.showPopup}">
    	 BootstrapDialog.show({
            title: '#{actionController.errorCollection.headerInformation}',
            message: '#{actionController.errorCollection.messages}',
            closable: false,
            buttons: [{
            	label: 'Schließen',
            	action: function(dialogRef) {
            		dialogRef.close();
            		history.go(-1);
            	}
            }]
        });
		</h:outputScript>
			<h:outputScript
				rendered="#{deleteServiceInstance.errorCollection.showPopup}">
    	 BootstrapDialog.show({
            title: '#{deleteServiceInstance.errorCollection.headerInformation}',
            message: '#{deleteServiceInstance.errorCollection.messages}',
            closable: false,
            buttons: [{
            	label: 'Schließen',
            	action: function(dialogRef) {
            		dialogRef.close();
            		history.go(-1);
            	}
            }]
        });
		</h:outputScript>
		</ui:define>
	</ui:composition>
</body>
</html>